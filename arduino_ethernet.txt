#include <EtherCard.h>

#define STATIC 1  // Set to 1 to disable DHCP (adjust myip/gwip values below)
#if STATIC
static byte myip[] = { 192, 168, 26, 242 };
static byte gwip[] = { 192, 168, 26, 1 };
#endif

static byte mymac[] = { 0x74, 0x69, 0x69, 0x2D, 0x30, 0x31 };
byte Ethernet::buffer[700]; // Increase buffer size if necessary

int pirSensorPin = 3;
bool motionDetected = false;
unsigned long lastMotionTime = 0;
unsigned long delayTime = 5000; // Delay for 5 seconds after motion detected

void setup() {
  pinMode(pirSensorPin, INPUT);
  Serial.begin(9600);
  if (ether.begin(sizeof Ethernet::buffer, mymac, SS) == 0)
    Serial.println("Failed to access Ethernet controller");
#if STATIC
  ether.staticSetup(myip, gwip);
#else
  if (!ether.dhcpSetup())
    Serial.println("DHCP failed");
#endif
  ether.printIp("IP:  ", ether.myip);
  ether.printIp("GW:  ", ether.gwip);
  ether.printIp("DNS: ", ether.dnsip);
}

void loop() {
  int currentMotionState = digitalRead(pirSensorPin);
  if (currentMotionState == HIGH && !motionDetected && millis() - lastMotionTime > delayTime) {
    Serial.println("MOTION DETECTED");
    lastMotionTime = millis();
    motionDetected = true;
  }
  if (currentMotionState == LOW && motionDetected && millis() - lastMotionTime > delayTime) {
    Serial.println("NO MOTION");
    motionDetected = false;
  }

  word len = ether.packetReceive();
  word pos = ether.packetLoop(len);

  if (pos) {  // Check if valid TCP data is received
    BufferFiller bfill = ether.tcpOffset();
    bfill.emit_p(PSTR("HTTP/1.0 200 OK\r\n"
                      "Content-Type: text/html\r\n"
                      "\r\n"
                      "<html><head><title>Motion Status</title></head><body>"
                      "<h1>"));
    if (motionDetected) {
      bfill.emit_p(PSTR("Motion Detected!</h1>"));
    } else {
      bfill.emit_p(PSTR("No Motion Detected.</h1>"));
    }
    bfill.emit_p(PSTR("<p><a href='/'>Refresh</a></p>"
                      "</body></html>"));

    ether.httpServerReply(bfill.position());  // Use bfill.position() to find the end of the HTTP response
  }
}